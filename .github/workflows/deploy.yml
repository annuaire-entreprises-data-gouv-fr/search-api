name: Deploy cluster

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-staging:
    name: Deploy on staging
    runs-on: ubuntu-latest
    environment:
      name: staging

    timeout-minutes: 15
    strategy:
      matrix:
        include:
          - environment: staging-01
            host: SSH_HOST_STAGING_01
    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ./deploy.key
          sudo chmod 600 ./deploy.key
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_MACHINE_USER_PRIVATE_KEY}}
          SSH_HOST: ${{ secrets[matrix.host] }}

      - name: Deploy to staging
        run: ssh -i ./deploy.key www-data@$SSH_HOST 'python3 /opt/scripts/app-deploy-release/deploy.py /opt/git/releases/annuaire-entreprises-search-api https://github.com/annuaire-entreprises-data-gouv-fr/search-api.git api --version main --versions_to_keep=5 1> >(tee --append /var/log/deploy_annuaire-entreprises-search-api)'
        env:
          SSH_HOST: ${{ secrets[matrix.host] }}

      - name: Notify staging failure only
        if: failure()
        uses: ./.github/actions/notify
        with:
          message: "ðŸš¨ ${{ github.event.repository.name }} [${{ matrix.environment }}] : deploy to staging cluster failed"
          hook: ${{ secrets.DEV_EVENT_HOOK }}

  deploy-production:
    name: Deploy on production
    runs-on: ubuntu-latest
    needs: [deploy-staging]
    environment:
      name: production

    timeout-minutes: 15
    strategy:
      matrix:
        include:
          - environment: production-01
            host: SSH_HOST_PRODUCTION_01
          - environment: production-02
            host: SSH_HOST_PRODUCTION_02
          - environment: production-03
            host: SSH_HOST_PRODUCTION_03
    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ./deploy.key
          sudo chmod 600 ./deploy.key
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_MACHINE_USER_PRIVATE_KEY}}
          SSH_HOST: ${{ secrets[matrix.host] }}

      - name: Deploy to production
        run: ssh -i ./deploy.key www-data@$SSH_HOST 'python3 /opt/scripts/app-deploy-release/deploy.py /opt/git/releases/annuaire-entreprises-search-api https://github.com/annuaire-entreprises-data-gouv-fr/search-api.git api --version main --versions_to_keep=5 1> >(tee --append /var/log/deploy_annuaire-entreprises-search-api)'
        env:
          SSH_HOST: ${{ secrets[matrix.host] }}

      - name: Notify production failure only
        if: failure()
        uses: ./.github/actions/notify
        with:
          message: "ðŸš¨ ${{ github.event.repository.name }} [${{ matrix.environment }}] : deploy to production cluster failed"
          hook: ${{ secrets.DEV_EVENT_HOOK }}

  notify-deploy-staging-success:
    name: Notify successful deployment
    runs-on: ubuntu-latest
    needs: [deploy-staging]

    steps:
      - uses: actions/checkout@v4
      - name: Notify deploy success
        uses: ./.github/actions/notify
        with:
          message: "âœ… ${{ github.event.repository.name }} : successfully deploy staging cluster"
          hook: ${{ secrets.DEV_EVENT_HOOK }}

  notify-deploy-success:
    name: Notify successful deployment
    runs-on: ubuntu-latest
    needs: [deploy-production]

    steps:
      - uses: actions/checkout@v4
      - name: Notify deploy success
        uses: ./.github/actions/notify
        with:
          message: "âœ… ${{ github.event.repository.name }} : successfully deploy production cluster"
          hook: ${{ secrets.DEV_EVENT_HOOK }}
